{"version":3,"file":"js/102.7150a566.js","mappings":"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","sources":["webpack://frontend/./src/lib/formatPhone.js","webpack://frontend/./src/lib/secsToHours.js","webpack://frontend/./src/lib/unixTimeToReminder.js","webpack://frontend/./src/lib/unixToReadable.js","webpack://frontend/./src/views/conflicts/EmployeeLDconflicts.vue","webpack://frontend/./src/views/conflicts/apis/fetchEmployeeLdConflicts.js","webpack://frontend/./src/views/conflicts/EmployeeLDconflicts.vue?d129"],"sourcesContent":["export default function formatPhone(rawPhone) {\r\n  if (rawPhone.slice(0, 2) !== \"+1\") return rawPhone;\r\n  console.log(\"calling\");\r\n  if (!rawPhone) return;\r\n  let formatted = \"\";\r\n\r\n  rawPhone = rawPhone.slice(2);\r\n\r\n  if (rawPhone.length <= 3) {\r\n    formatted = rawPhone;\r\n  } else if (rawPhone.length <= 6) {\r\n    formatted = `${rawPhone.slice(0, 3)} ${rawPhone.slice(3)}`;\r\n  } else {\r\n    formatted = `${rawPhone.slice(0, 3)} ${rawPhone.slice(\r\n      3,\r\n      6\r\n    )} ${rawPhone.slice(6)}`;\r\n  }\r\n\r\n  // return result\r\n  return formatted;\r\n}\r\n","import { DateTime } from \"luxon\";\r\n\r\nexport default function secsToHours(secs) {\r\n  console.log(\"calling\");\r\n\r\n  return DateTime.fromObject({ hour: 0 })\r\n    .plus({ seconds: secs })\r\n    .toFormat(\"h:mm a\");\r\n}\r\n","import { DateTime } from \"luxon\";\r\n\r\nexport default function unixTimeToReminder(unix) {\r\n  console.log(\"calling\");\r\n\r\n  if (!unix) {\r\n    return;\r\n  }\r\n\r\n  const inputDate = DateTime.fromSeconds(unix).startOf(\"day\");\r\n  const today = DateTime.local().startOf(\"day\");\r\n\r\n  const diff = inputDate.diff(today, \"days\").toObject();\r\n  const daysDiff = Math.round(diff.days);\r\n\r\n  if (inputDate.equals(today)) {\r\n    return \"Today\";\r\n  }\r\n  if (daysDiff === 1) {\r\n    return \"Tomorrow\";\r\n  } else if (daysDiff === -1) {\r\n    return \"Yesterday\";\r\n  }\r\n\r\n  const isFuture = daysDiff > 0 ? \"next\" : \"last\";\r\n\r\n  if (Math.abs(daysDiff) >= 30) {\r\n    return `${isFuture} ${Math.abs(Math.round(daysDiff / 30))}m`;\r\n  } else if (Math.abs(daysDiff) >= 7) {\r\n    return `${isFuture} ${Math.abs(Math.round(daysDiff / 7))}w`;\r\n  } else {\r\n    return `${isFuture} ${Math.abs(daysDiff)}d`;\r\n  }\r\n}\r\n","import { DateTime } from \"luxon\";\r\nimport getTimezone from \"./getTimeZone\";\r\n\r\nexport default function unixToReadable(unixTimestamp) {\r\n  console.log(\"calling\");\r\n\r\n  if (!unixTimestamp) {\r\n    return;\r\n  }\r\n\r\n  // Convert the Unix timestamp to a Luxon DateTime object in the specified timezone\r\n  const dateTime = DateTime.fromMillis(unixTimestamp * 1000).setZone(\r\n    getTimezone()\r\n  );\r\n\r\n  // Format the date with short weekday and month (e.g., \"Mon, Jan 20, 2025\")\r\n  return dateTime.toLocaleString({\r\n    weekday: \"short\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n    year: \"numeric\",\r\n  });\r\n}\r\n","<template>\r\n  <div id=\"title\">Employee Availability Conflicts</div>\r\n\r\n  <table>\r\n    <colgroup>\r\n      <col style=\"width: auto\" />\r\n      <col style=\"width: auto\" />\r\n    </colgroup>\r\n    <tbody>\r\n      <tr>\r\n        <th>Client</th>\r\n        <th>Service</th>\r\n        <th>Time</th>\r\n      </tr>\r\n      <tr\r\n        class=\"row\"\r\n        v-for=\"(conflict, index) in conflicts\"\r\n        :key=\"index\"\r\n        @click=\"toAppoDetails(conflict.appoDate, conflict.appoId)\"\r\n      >\r\n        <td>\r\n          {{ conflict.contactName }}\r\n          <div>{{ formatPhone(conflict.phoneNum) }}</div>\r\n        </td>\r\n        <td>\r\n          {{ conflict.serviceName }}\r\n          <div>{{ conflict.category }}</div>\r\n        </td>\r\n        <td>\r\n          {{ unixToReadable(conflict.appoDate) }} ({{\r\n            unixTimeToReminder(conflict.appoDate)\r\n          }})\r\n          <div>\r\n            {{ secsToHours(conflict.appoStart) }} -\r\n            {{ secsToHours(conflict.appoEnd) }}\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\n// lib\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport fetchEmployeeLdConflicts from \"./apis/fetchEmployeeLdConflicts\";\r\n\r\nimport formatPhone from \"@/lib/formatPhone\";\r\nimport unixToReadable from \"@/lib/unixToReadable\";\r\nimport unixTimeToReminder from \"@/lib/unixTimeToReminder\";\r\nimport secsToHours from \"@/lib/secsToHours\";\r\n\r\nexport default {\r\n  setup() {\r\n    // param from URL\r\n    const route = useRoute();\r\n    const empId = route.params.empId;\r\n    // router\r\n    const router = useRouter();\r\n    // resources\r\n    const conflicts = ref([]);\r\n\r\n    // BUTTONS\r\n    const toAppoDetails = (date, appoId) => {\r\n      console.log(\"date, appoId\", date, appoId);\r\n      router.push(`/calendar/${date}/${appoId}`);\r\n    };\r\n\r\n    // LIFECYCLE\r\n    onMounted(async () => {\r\n      // fetch resources\r\n      conflicts.value = await fetchEmployeeLdConflicts(empId);\r\n    });\r\n    return {\r\n      empId,\r\n      conflicts,\r\n      toAppoDetails,\r\n      unixTimeToReminder,\r\n      secsToHours,\r\n      unixToReadable,\r\n      formatPhone,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n}\r\nth,\r\ntd {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n\r\n  text-align: center;\r\n}\r\ntr {\r\n  border: 1px solid;\r\n}\r\n.row {\r\n  cursor: pointer;\r\n}\r\n.row:hover {\r\n  background: var(--hover);\r\n}\r\n.row:active {\r\n  background: var(--active);\r\n}\r\n#title {\r\n  font-size: 25px;\r\n  padding: 10px;\r\n}\r\n</style>","import notifyReqError from \"@/stores/notifyReqError\";\r\n\r\nexport default async function fetchEmployeeLdConflicts(empId) {\r\n  try {\r\n    // get app path\r\n    const baseURL = process.env.VUE_APP_BASE_URL;\r\n\r\n    // start requesting server\r\n    const res = await fetch(\r\n      `${baseURL}/api/employees/get_employee_ld_conflicts/${empId}`,\r\n      {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    // fetch json\r\n    const json = await res.json();\r\n\r\n    // read status and process response\r\n    if (res.ok) {\r\n      // res holder\r\n      let conflicts = [];\r\n\r\n      const table = json.conflicts;\r\n      console.log(\"table\", table);\r\n      for (let row of table) {\r\n        const [\r\n          serviceId,\r\n          appoId,\r\n          appoDate,\r\n          appoDOW,\r\n          appoStart,\r\n          appoEnd,\r\n          empAlias,\r\n          serviceName,\r\n          contactName,\r\n          phoneNumId,\r\n          phoneNum,\r\n          category,\r\n        ] = row;\r\n\r\n        conflicts.push({\r\n          serviceId,\r\n          appoId,\r\n          appoDate,\r\n          appoDOW,\r\n          appoStart,\r\n          appoEnd,\r\n          empAlias,\r\n          serviceName,\r\n          contactName,\r\n          phoneNumId,\r\n          phoneNum,\r\n          category,\r\n        });\r\n      }\r\n\r\n      return conflicts;\r\n    } else {\r\n      notifyReqError(json.message);\r\n      console.log(\r\n        \"Failed to fetch employee's last date conflicts, message: \",\r\n        json.message\r\n      );\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Unexpected Error: \", e);\r\n  }\r\n}\r\n","import { render } from \"./EmployeeLDconflicts.vue?vue&type=template&id=8fa49958&scoped=true\"\nimport script from \"./EmployeeLDconflicts.vue?vue&type=script&lang=js\"\nexport * from \"./EmployeeLDconflicts.vue?vue&type=script&lang=js\"\n\nimport \"./EmployeeLDconflicts.vue?vue&type=style&index=0&id=8fa49958&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8fa49958\"]])\n\nexport default __exports__"],"names":["formatPhone","rawPhone","slice","console","log","formatted","length","secsToHours","secs","DateTime","fromObject","hour","plus","seconds","toFormat","unixTimeToReminder","unix","inputDate","fromSeconds","startOf","today","local","diff","toObject","daysDiff","Math","round","days","equals","isFuture","abs","unixToReadable","unixTimestamp","dateTime","fromMillis","setZone","getTimezone","toLocaleString","weekday","month","day","year","_createElementBlock","_Fragment","_createElementVNode","id","style","_renderList","$setup","conflicts","conflict","index","class","key","onClick","$event","toAppoDetails","appoDate","appoId","_createTextVNode","_toDisplayString","contactName","phoneNum","serviceName","category","appoStart","appoEnd","_hoisted_1","async","fetchEmployeeLdConflicts","empId","baseURL","process","res","fetch","method","credentials","headers","json","ok","table","row","serviceId","appoDOW","empAlias","phoneNumId","push","notifyReqError","message","e","error","setup","route","useRoute","params","router","useRouter","ref","date","onMounted","value","__exports__","render"],"sourceRoot":""}